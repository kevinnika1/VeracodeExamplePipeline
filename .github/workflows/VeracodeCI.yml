name: Python container Veracode CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

   SCA:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repo
        uses: actions/checkout@master

      - name: Run Checkov action client
        uses: bridgecrewio/checkov-action@master
        with:
          soft_fail: true
          output_format: cli
      
      - name: Run Checkov action github
        uses: bridgecrewio/checkov-action@master
        with:
          soft_fail: true
          output_format: github_failed_only
      

   SAST:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@master
      
      - uses: actions/checkout@v2
        with:
        repository: ''

      - uses: papeloto/action-zip@v1
        with:
          files: /
          recursive: true
          dest: veracode-pipeline-scan-results-to-sarif.zip

      - uses: actions/upload-artifact@v1
        with:
          name: my-artifact
          path: veracode-pipeline-scan-results-to-sarif.zip

      # download the Veracode Static Analysis Pipeline scan jar
      - uses: wei/curl@master
        with:
          args: -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      - run: unzip -o pipeline-scan-LATEST.zip

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VERACODE_API_ID}}" --veracode_api_key "${{secrets.VERACODE_API_KEY}}" --fail_on_severity="Very High, High" --file veracode-pipeline-scan-results-to-sarif.zip
        continue-on-error: true
      - uses: actions/upload-artifact@v1
        with:
          name: ScanResults
          path: results.json
      - name: Convert pipeline scan output to SARIF format
        id: convert
        uses: veracode/veracode-pipeline-scan-results-to-sarif@master
        with:
          pipeline-results-json: results.json
      - uses: github/codeql-action/upload-sarif@v1
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: veracode-results.sarif
     

   ContainerVM:
    runs-on: ubuntu-latest
    needs: [SCA,SAST]
    steps: 
      - name:  Checkout repo
        uses: actions/checkout@master

      - name: Build an image from Dockerfile
        run: |
          docker build . --tag flask-demo-container:${{ github.sha }}
          
      - name: Trivy Scan
        uses: kevinnika1/Trivy-GitHubChecks-Action@v0.2
        with:
          image-ref: 'flask-demo-container:${{ github.sha }}'
          repo_token: ${{ secrets.GITHUB_TOKEN }}
   
   PushtoECR:
      runs-on: ubuntu-latest
      needs: [ContainerVM]
      name: Push to ECR

      steps:
      - name: Push to ECR
        run: echo 'push to ecr'

   DeployToEKS:
      runs-on: ubuntu-latest
      needs: [PushtoECR]
      steps:
        - name: push to ecs/eks
          run: echo "pushing to eks or ecs"

   # this part need to pass it website link whether that is static or not depends on application but in this case will test a random app. 
   DAST: 
     runs-on: ubuntu-latest
     needs: [DeployToEKS]
     steps:
      - name: Qualys DAST on website
        uses: kevinnika1/QualysWAS-Action@v1
        with:
          qualysuser: ${{ secrets.qualysuser }}
          qualyspass: ${{ secrets.qualyspass }}
          website: 'https://t5s-tst.nlv.yourmenu.cloud'
          project: 'Veracode-pipeline'

          
